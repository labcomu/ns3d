FROM ubuntu:jammy

ARG DEBIAN_FRONTEND=noninteractive

# update system and install
# - base system packages
# - NS-3 core dependencies
# - NS-3 python bindings
RUN ln -fs /usr/share/zoneinfo/Asia/Karachi /etc/localtime && \
    apt-get update && apt-get install -y \
    build-essential \
    linux-headers-generic \
    less nano \
    tar bzip2 unzip unrar \
    git curl html-xml-utils \
    g++ gettext make cmake ninja-build ccache \
    clang-format-14 clang-tidy-14 \
    gdb valgrind \
    gsl-bin libgsl-dev libgslcblas0 \
    python3 python3-dev python3-pip python3-setuptools \
    libboost-all-dev \
    libgtk-3-dev \
    libfl-dev \
    libxml2 libxml2-dev \
    libopenmpi-dev openmpi-bin openmpi-common openmpi-doc \
    libsqlite3-dev sqlite3 \
    libeigen3-dev \
    qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools \
    ssh tcpdump \
    sqlite sqlite3 libsqlite3-dev \
    doxygen graphviz imagemagick \
    python3-sphinx dia imagemagick texlive dvipng latexmk \
    texlive-extra-utils texlive-latex-extra texlive-font-utils \
    libxml2 libxml2-dev \
    libgtk-3-dev \
    lxc-utils lxc-templates vtun uml-utilities ebtables bridge-utils \
    gir1.2-goocanvas-2.0 python3-gi python3-gi-cairo python3-pygraphviz gir1.2-gtk-3.0 ipython3 \
    && mkdir -p /tmp/neovim && cd /tmp/neovim \
    && git clone https://github.com/neovim/neovim . \
    && git checkout stable \
    && make CMAKE_BUILD_TYPE=Release install \
    && cd - >/dev/null && rm -rf /tmp/neovim \
    && pip3 install -U pip sphinx cppyy \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

USER 1001

WORKDIR /dist/

ENV PATH="/dist:$PATH" \
    DISTDIR=/dist \
    NS3DIR=/dist/ns3 \
    NS3LOGDIR=/dist/log \
    NS3CONFIG="--enable-examples --enable-tests" \
    NS3DEBUG="--build-profile=debug --out=build/debug" \
    NS3OPT="--build-profile=optimized --out=build/optimized"

COPY ns3-get.sh /tmp/
RUN bash /tmp/ns3-get.sh

COPY ns3-deps.sh /tmp/
RUN bash /tmp/ns3-deps.sh

COPY ns3-build.sh /tmp/
RUN bash /tmp/ns3-build.sh

WORKDIR /app/

CMD ["/bin/bash"]
